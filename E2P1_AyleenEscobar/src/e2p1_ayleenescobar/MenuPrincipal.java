/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package e2p1_ayleenescobar;

import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author Junnior Sauceda
 */
public class MenuPrincipal extends javax.swing.JFrame {
static Scanner sc=new Scanner(System.in);
    static int cant;
    static ArrayList<Numero> lista=new ArrayList<>();
    static Numero Num=new Numero();
    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 255, 51));

        jLabel1.setFont(new java.awt.Font("Algerian", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Examen II");

        jButton1.setText("Numeros");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Operaciones");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Salir");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(34, 34, 34)
                .addComponent(jButton2)
                .addGap(43, 43, 43)
                .addComponent(jButton3)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        boolean nume=true;
        do{
        System.out.println("1. Agregar Numero");
        System.out.println("2. Eliminar Numero");
        System.out.println("3. Menu Principal");
        int num=sc.nextInt();
        switch(num){
            case 1:{
                ++cant;
                System.out.println("Ingrese el numero");
                int numero=sc.nextInt();
                while(numero<1){
                    System.out.println("El numero debe ser mayor que 0");
                    System.out.println("Ingrese otro numero");
                    numero=sc.nextInt();
                }
                System.out.println("Ingrese la Base");
                int Base=sc.nextInt();
                while(Base<1){
                    System.out.println("La base debe ser mayor que 0 y menor o igual que 36 ");
                    System.out.println("Ingrese otra base");
                    Base=sc.nextInt();
                }
                Num=new Numero(Base,numero);
                lista.add(Num);
                System.out.println("El resultado es:"+Num.getnum());
                System.out.println("Numero agregado exitosamente");
            }
            break;
            case 2:{
                if(cant>=1){
                    imprimir();
                    System.out.println("Elija el numero que desea eliminar: ");
                    int n=sc.nextInt();
                    while(n<0||n>lista.size()){
                        System.out.println("Ingrese un numero valido");
                        n=sc.nextInt();
                    }
                    lista.remove(n-1);
                    System.out.println("Se ha eliminado el numero de manera exitosa");
                }else{
                    System.out.println("Para entrar a esta opcion debe crear un numero");
                }
            }
            break;
            case 3:{
                nume=false;
            }
            break;
            default:{
                System.out.println("La opcion ingresada no es valida");
            }
            break;
        }
        }while(nume);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        boolean seguir=true;
        do{
        System.out.println("1. Sumar numeros");
        System.out.println("2. Restar numeros");
        System.out.println("3. Multiplicar numeros");
        System.out.println("4. Menu principal");
        System.out.println("Ingrese una opcion");
        int n=sc.nextInt();
        switch(n){
            case 1:{
                    if(cant>0){
                        imprimir();
                        System.out.println("Seleccione el primer numero");
                        int num1=sc.nextInt();
                        while(num1<1||num1>lista.size()){
                            System.out.println("Numero invalido");
                            System.out.println("Ingrese otro numero");
                            num1=sc.nextInt();
                        }
                        imprimir();
                        System.out.println("Seleccione el segundo numero");
                        int num2=sc.nextInt();
                        while(num2<1||num2>lista.size()){
                            System.out.println("Numero invalido");
                            System.out.println("Ingrese otro numero");
                            num2=sc.nextInt();
                        }
                        int n1=lista.get(num1-1).baseToDec(lista.get(num1-1).getnum(),lista.get(num1-1).getBase() );
                        int n2=lista.get(num2-1).baseToDec(lista.get(num2-1).getnum(),lista.get(num2-1).getBase() );
                        int b1=lista.get(num1-1).getBase();
                        int b2=lista.get(num2-1).getBase();
                        int base=0;
                        int suma=n1+n2;
                        if(b1>b2){
                            base=b1;
                        }
                        else if(b2>b1){
                            base=b2;
                        }
                        Num=new Numero(base,suma);
                        System.out.println(Num.getnum()+" Base "+Num.getBase()+":"+Num.baseToDec(Num.getnum(),Num.getBase() ));
                    }
                    else{
                        System.out.println("Primero debe agregar un numero");
                    }
                }
                break;
                case 2:{
                    if(cant>0){
                        imprimir();
                        System.out.println("Seleccione el primer numero");
                        int num1=sc.nextInt();
                        while(num1<1||num1>lista.size()){
                            System.out.println("Numero invalido");
                            System.out.println("Ingrese otro numero");
                            num1=sc.nextInt();
                        }
                        imprimir();
                        System.out.println("Seleccione el segundo numero");
                        int num2=sc.nextInt();
                        while(num2<1||num2>lista.size()){
                            System.out.println("Numero invalido");
                            System.out.println("Ingrese otro numero");
                            num2=sc.nextInt();
                        }
                        int n1=lista.get(num1-1).baseToDec(lista.get(num1-1).getnum(),lista.get(num1-1).getBase() );
                        int n2=lista.get(num2-1).baseToDec(lista.get(num2-1).getnum(),lista.get(num2-1).getBase() );
                        int b1=lista.get(num1-1).getBase();
                        int b2=lista.get(num2-1).getBase();
                        int base=0;
                        int suma=n1-n2;
                        if(suma>=0){
                            if(b1>b2){
                                base=b1;
                            }
                            else if(b2>b1){
                                base=b2;
                            }
                            Num=new Numero(base,suma);
                            System.out.println(Num.getnum()+" Base "+Num.getBase()+":"+Num.baseToDec(Num.getnum(),Num.getBase() ));
                    }else{
                            System.out.println("El numero no puede ser negativo");
                        }
                    }
                    else{
                        System.out.println("Primero debe agregar un numero");
                    }
                }
                break;
                case 3:{
                    if(cant>0){
                        imprimir();
                        System.out.println("Seleccione el primer numero");
                        int num1=sc.nextInt();
                        while(num1<1||num1>lista.size()){
                            System.out.println("Numero invalido");
                            System.out.println("Ingrese otro numero");
                            num1=sc.nextInt();
                        }
                        imprimir();
                        System.out.println("Seleccione el segundo numero");
                        int num2=sc.nextInt();
                        while(num2<1||num2>lista.size()){
                            System.out.println("Numero invalido");
                            System.out.println("Ingrese otro numero");
                            num2=sc.nextInt();
                        }
                        int n1=lista.get(num1-1).baseToDec(lista.get(num1-1).getnum(),lista.get(num1-1).getBase() );
                        int n2=lista.get(num2-1).baseToDec(lista.get(num2-1).getnum(),lista.get(num2-1).getBase() );
                        int b1=lista.get(num1-1).getBase();
                        int b2=lista.get(num2-1).getBase();
                        int base=0;
                        int suma=n1*n2;
                        if(b1>b2){
                            base=b1;
                        }
                        else if(b2>b1){
                            base=b2;
                        }
                        Num=new Numero(base,suma);
                        System.out.println(Num.getnum()+" Base "+Num.getBase()+":"+Num.baseToDec(Num.getnum(),Num.getBase() ));
                    }
                    else{
                        System.out.println("Primero debe agregar un numero");
                    }
                }
                break;
                case 4:{
                    seguir=false;
                }
                break;
                default:{
                    System.out.println("La opcion ingresada no es valida");
                }
                break;
            }
            }while(seguir);
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }
    public void imprimir(){
        for(int i=0;i<lista.size();i++){
            System.out.println((i+1)+". "+lista.get(i).getnum()+" Base "+lista.get(i).getBase()+":"+lista.get(i).baseToDec(lista.get(i).getnum(),lista.get(i).getBase() ));
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
